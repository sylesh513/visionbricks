{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nfunction NodeDialogComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function NodeDialogComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDelete());\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let NodeDialogComponent = /*#__PURE__*/(() => {\n  class NodeDialogComponent {\n    dialogRef;\n    data;\n    cdr;\n    selectedFile = null;\n    constructor(dialogRef, data, cdr) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.cdr = cdr;\n    }\n    onCancel() {\n      this.dialogRef.close();\n    }\n    onCreate() {\n      const action = this.data.mode === 'edit' ? 'save' : 'create';\n      this.dialogRef.close({\n        action: action,\n        name: this.data.name,\n        params: this.data.params,\n        file: this.selectedFile\n      });\n      this.cdr.detectChanges(); // Trigger change detection if necessary\n    }\n    onDelete() {\n      console.log('delete');\n      this.dialogRef.close({\n        action: 'delete'\n      });\n      this.cdr.detectChanges(); // Trigger change detection if necessary\n    }\n    onFileSelected(event) {\n      const input = event.target;\n      if (input.files && input.files.length > 0) {\n        this.selectedFile = input.files[0];\n      }\n    }\n    static ɵfac = function NodeDialogComponent_Factory(t) {\n      return new (t || NodeDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NodeDialogComponent,\n      selectors: [[\"app-node-dialog\"]],\n      decls: 17,\n      vars: 5,\n      consts: [[\"mat-dialog-title\", \"\"], [\"matInput\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"]],\n      template: function NodeDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"mat-form-field\")(4, \"mat-label\");\n          i0.ɵɵtext(5, \"Node Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function NodeDialogComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.data.name, $event) || (ctx.data.name = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n          i0.ɵɵtext(9, \"Parameters\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"textarea\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function NodeDialogComponent_Template_textarea_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.data.params, $event) || (ctx.data.params = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"mat-dialog-actions\")(12, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function NodeDialogComponent_Template_button_click_12_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(13, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, NodeDialogComponent_button_14_Template, 2, 0, \"button\", 3);\n          i0.ɵɵelementStart(15, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function NodeDialogComponent_Template_button_click_15_listener() {\n            return ctx.onCreate();\n          });\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(ctx.data.mode === \"edit\" ? \"Edit Node\" : \"Enter Node Name\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.data.name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.data.params);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.data.mode === \"edit\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.data.mode === \"edit\" ? \"Save\" : \"Create\");\n        }\n      },\n      dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i1.MatDialogTitle, i1.MatDialogActions, i1.MatDialogContent, i4.MatButton, i5.MatInput, i6.MatFormField, i6.MatLabel],\n      styles: [\".mat-dialog-container[_ngcontent-%COMP%]{max-width:90vw;padding:20px;box-sizing:border-box;overflow:hidden}.mat-form-field[_ngcontent-%COMP%]{width:100%}.mat-dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}\"]\n    });\n  }\n  return NodeDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}