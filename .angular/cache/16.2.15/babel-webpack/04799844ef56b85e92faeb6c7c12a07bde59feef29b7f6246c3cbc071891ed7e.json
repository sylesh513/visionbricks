{"ast":null,"code":"import Drawflow from 'drawflow';\nimport * as i0 from \"@angular/core\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.id = null;\n      this.data = {\n        name: ''\n      };\n    }\n    ngOnInit() {\n      this.id = document.getElementById('drawflow');\n      this.drawflow = new Drawflow(this.id);\n      this.drawflow.start();\n      this.addNode('node1', 10, 100);\n      this.addNode('node2', 100, 200);\n      this.addLink('test', 'test');\n      let label1 = document.querySelector('.connection.node_in_node-2.node_out_node-1.output_1.input_1');\n      this.addLabelText(label1, 'Something');\n    }\n    addNode(nodeName, x, y) {\n      var html = document.createElement('div');\n      html.innerHTML = 'Hello Drawflow!!';\n      this.drawflow.registerNode('test', html);\n      // Use\n      this.drawflow.addNode(nodeName, 1, 1, x, y, 'github', this.data, 'test', true);\n    }\n    addLink(sourceNodeId, targetNodeId) {\n      this.drawflow.addConnection(sourceNodeId, '', targetNodeId, '');\n    }\n    addLabelText(bgPath, labelText) {\n      const newid = [bgPath.classList].join().replace(/\\s/g, '');\n      bgPath.childNodes[0].id = newid;\n      let textElem = document.createElementNS(bgPath.namespaceURI, 'text');\n      let textElemPath = document.createElementNS(bgPath.namespaceURI, 'textPath');\n      textElemPath.setAttribute('href', `#${newid}`);\n      textElemPath.setAttribute('text-anchor', 'middle');\n      textElemPath.setAttribute('startOffset', '50%');\n      textElemPath.classList.add('label-text');\n      textElemPath.textContent = labelText;\n      textElem.appendChild(textElemPath);\n      bgPath.appendChild(textElem);\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      decls: 2,\n      vars: 0,\n      consts: [[\"id\", \"drawflow\"], [\"drawflow\", \"\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0, 1);\n        }\n      },\n      styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%]; (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap var __webpack_modules__ = ({553: (() => {throw new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):nnSyntaxErrornn(343:3) /home/vesh/angular-drawflow-ttbyqn/src/app/app.component.css Unknown wordnn u001b[90m 341 | u001b[39mn u001b[90m 342 | u001b[39mu001b[33m.modal-contentu001b[39m u001b[33m{u001b[39m,nu001b[1mu001b[31m>u001b[39mu001b[22mu001b[90m 343 | u001b[39m  positionu001b[33m:u001b[39m relativeu001b[33m;u001b[39mn u001b[90m     | u001b[39m  u001b[1mu001b[31m^u001b[39mu001b[22mn u001b[90m 344 | u001b[39m  background-coloru001b[33m:u001b[39m u001b[35m#fefefeu001b[39mu001b[33m;u001b[39mn u001b[90m 345 | u001b[39m  marginu001b[33m:u001b[39m 15% autou001b[33m;u001b[39m u001b[90m\\nu001b[39mn\\\");})}); // startup // Load entry module and return exports // This entry module doesn\\\"t tell about it\\\"s top-level declarations so it can't be inlined\\nvar __webpack_exports__ = {}; __webpack_modules__[553](); resource = __webpack_exports__;})() ;{}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}