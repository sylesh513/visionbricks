{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction SidebarComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 5)(1, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function SidebarComponent_li_4_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r1.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_4_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteItem(i_r2));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", item_r1.name);\n  }\n}\nexport let SidebarComponent = /*#__PURE__*/(() => {\n  class SidebarComponent {\n    items = [{\n      name: 'Item 1'\n    }, {\n      name: 'Item 2'\n    }, {\n      name: 'Item 3'\n    }];\n    newItemName = '';\n    addItem() {\n      if (this.newItemName) {\n        this.items.push({\n          name: this.newItemName\n        });\n        this.newItemName = '';\n      } else {\n        alert('Please enter an item name');\n      }\n    }\n    deleteItem(index) {\n      this.items.splice(index, 1);\n    }\n    static ɵfac = function SidebarComponent_Factory(t) {\n      return new (t || SidebarComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SidebarComponent,\n      selectors: [[\"app-sidebar\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 2,\n      consts: [[1, \"sidebar\"], [\"id\", \"draggable-list\"], [\"class\", \"draggable-item\", \"cskdrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Enter new item name\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"cskdrag\", \"\", 1, \"draggable-item\"], [3, \"ngModel\", \"ngModelChange\"]],\n      template: function SidebarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2, \"Draggable List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"ul\", 1);\n          i0.ɵɵtemplate(4, SidebarComponent_li_4_Template, 4, 1, \"li\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function SidebarComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.newItemName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function SidebarComponent_Template_button_click_6_listener() {\n            return ctx.addItem();\n          });\n          i0.ɵɵtext(7, \"Add Item\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.newItemName);\n        }\n      },\n      dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel]\n    });\n  }\n  return SidebarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}