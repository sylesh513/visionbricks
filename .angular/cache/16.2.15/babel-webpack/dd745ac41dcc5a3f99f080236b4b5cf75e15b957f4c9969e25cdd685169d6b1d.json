{"ast":null,"code":"import Drawflow from 'drawflow';\nimport interact from 'interactjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 9)(1, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_li_8_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_li_8_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteItem(i_r3));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵattribute(\"data-node-name\", item_r2.name)(\"data-index\", i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", item_r2.name);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    drawflow;\n    id = null;\n    data = {\n      name: ''\n    };\n    items = [{\n      name: 'Item 1'\n    }, {\n      name: 'Item 2'\n    }, {\n      name: 'Item 3'\n    }];\n    newItemName = '';\n    ngOnInit() {\n      this.id = document.getElementById('drawflow');\n      this.drawflow = new Drawflow(this.id);\n      this.drawflow.start();\n      // Initialize draggable items\n      interact('.draggable-item').draggable({\n        inertia: true,\n        autoScroll: true,\n        onmove: this.dragMoveListener,\n        onend: event => {\n          if (!event.target.dropzone) {\n            // Snap back to original position\n            event.target.style.transform = 'translate(0px, 0px)';\n          }\n        }\n      });\n      // Set up the dropzone\n      interact('#drawflow').dropzone({\n        accept: '.draggable-item',\n        overlap: 0.75,\n        ondrop: event => {\n          const nodeName = event.relatedTarget.getAttribute('data-node-name');\n          const index = event.relatedTarget.getAttribute('data-index');\n          const x = event.dragEvent.clientX - event.target.getBoundingClientRect().left;\n          const y = event.dragEvent.clientY - event.target.getBoundingClientRect().top;\n          this.addNode(nodeName, x, y);\n          // this.removeNodeFromDrawflow(index);\n        },\n\n        ondropdeactivate: event => {\n          // Reset the position of the draggable item\n          event.relatedTarget.style.transform = 'translate(0px, 0px)';\n        }\n      });\n    }\n    dragMoveListener(event) {\n      const target = event.target;\n      const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n      const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n      target.style.transform = `translate(${x}px, ${y}px)`;\n      target.setAttribute('data-x', x);\n      target.setAttribute('data-y', y);\n    }\n    addNode(nodeName, x, y) {\n      var html = document.createElement('div');\n      html.innerHTML = nodeName;\n      this.drawflow.registerNode('test', html);\n      this.drawflow.addNode(nodeName, 1, 1, x, y, 'github', this.data, 'test', true);\n    }\n    removeNodeFromDrawflow(index) {\n      const item = document.querySelector(`.draggable-item[data-index=\"${index}\"]`);\n      if (item) {\n        item.style.display = 'none';\n        setTimeout(() => {\n          item.style.display = '';\n        }, 0);\n      }\n    }\n    createNode() {\n      const nodeNameInput = document.getElementById('nodeNameInput');\n      const nodeName = nodeNameInput.value;\n      if (nodeName) {\n        this.addNode(nodeName, 50, 50); // You can adjust the x and y coordinates as needed\n        nodeNameInput.value = ''; // Clear the input field after creating the node\n      } else {\n        alert('Please enter a node name');\n      }\n    }\n    addItem() {\n      if (this.newItemName) {\n        this.items.push({\n          name: this.newItemName\n        });\n        this.newItemName = '';\n      } else {\n        alert('Please enter an item name');\n      }\n    }\n    deleteItem(index) {\n      this.items.splice(index, 1);\n    }\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[\"type\", \"text\", \"id\", \"nodeNameInput\", \"placeholder\", \"Enter node name\"], [3, \"click\"], [1, \"container\"], [1, \"sidebar\"], [\"id\", \"draggable-list\"], [\"class\", \"draggable-item\", \"draggable\", \"true\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Enter new item name\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"drawflow\"], [\"drawflow\", \"\"], [\"draggable\", \"true\", 1, \"draggable-item\"], [3, \"ngModel\", \"ngModelChange\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"input\", 0);\n          i0.ɵɵelementStart(1, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_1_listener() {\n            return ctx.createNode();\n          });\n          i0.ɵɵtext(2, \"Create Node\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"h3\");\n          i0.ɵɵtext(6, \"Draggable List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"ul\", 4);\n          i0.ɵɵtemplate(8, AppComponent_li_8_Template, 4, 3, \"li\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_9_listener($event) {\n            return ctx.newItemName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_10_listener() {\n            return ctx.addItem();\n          });\n          i0.ɵɵtext(11, \"Add Item\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(12, \"div\", 7, 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.newItemName);\n        }\n      },\n      dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\"[_ngcontent-%COMP%]:root{--border-color: #cacaca;--background-color: #ffffff;--background-box-title: #f7f7f7}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{margin:0;padding:0;width:100vw;height:100vh;overflow:hidden;font-family:Roboto,sans-serif}header[_ngcontent-%COMP%]{height:66px;border-bottom:1px solid var(--border-color);padding-left:20px}header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0;line-height:66px}header[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#000}.them-edit-link[_ngcontent-%COMP%]{position:absolute;top:10px;right:100px;color:#000;font-size:40px}.them-edit-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.github-link[_ngcontent-%COMP%]{position:absolute;top:10px;right:20px;color:#000}.wrapper[_ngcontent-%COMP%]{width:100%;height:calc(100vh - 67px);display:flex}.col[_ngcontent-%COMP%]{overflow:auto;width:300px;height:100%;border-right:1px solid var(--border-color)}.drag-drawflow[_ngcontent-%COMP%]{line-height:50px;border-bottom:1px solid var(--border-color);padding-left:20px;cursor:move;-webkit-user-select:none;user-select:none}.menu[_ngcontent-%COMP%]{position:absolute;height:40px;display:block;background:white;width:100%}.menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{padding:0;margin:0;line-height:40px}.menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline-block;margin-left:10px;border-right:1px solid var(--border-color);padding-right:10px;line-height:40px;cursor:pointer}.menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li.selected[_ngcontent-%COMP%]{font-weight:700}.btn-export[_ngcontent-%COMP%]{float:right;position:absolute;top:10px;right:10px;color:#fff;font-weight:700;border:1px solid #0e5ba3;background:#4ea9ff;padding:5px 10px;border-radius:4px;cursor:pointer;z-index:5}.btn-clear[_ngcontent-%COMP%]{float:right;position:absolute;top:10px;right:85px;color:#fff;font-weight:700;border:1px solid #96015b;background:#e3195a;padding:5px 10px;border-radius:4px;cursor:pointer;z-index:5}.swal-wide[_ngcontent-%COMP%]{width:80%!important}.btn-lock[_ngcontent-%COMP%]{float:right;position:absolute;bottom:10px;right:140px;display:flex;font-size:24px;color:#fff;padding:5px 10px;background:#555555;border-radius:4px;border-right:1px solid var(--border-color);z-index:5;cursor:pointer}.bar-zoom[_ngcontent-%COMP%]{float:right;position:absolute;bottom:10px;right:10px;display:flex;font-size:24px;color:#fff;padding:5px 10px;background:#555555;border-radius:4px;border-right:1px solid var(--border-color);z-index:5}.bar-zoom[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{cursor:pointer;padding-left:10px}.bar-zoom[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]:nth-child(1){padding-left:0}#drawflow[_ngcontent-%COMP%]{padding-left:200px;display:flex;width:70%;height:100vh;top:40px;background:var(--background-color);background-size:25px 25px;background-image:linear-gradient(to right,#f1f1f1 1px,transparent 1px),linear-gradient(to bottom,#f1f1f1 1px,transparent 1px)}@media only screen and (max-width: 768px){.col[_ngcontent-%COMP%]{width:50px}.col[_ngcontent-%COMP%]   .drag-drawflow[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:none}#drawflow[_ngcontent-%COMP%]{width:calc(100vw - 51px)}}.drawflow[_ngcontent-%COMP%]   .drawflow-node[_ngcontent-%COMP%]{background:var(--background-color);border:1px solid var(--border-color);box-shadow:0 2px 15px 2px var(--border-color);padding:0;width:200px}.drawflow[_ngcontent-%COMP%]   .drawflow-node.selected[_ngcontent-%COMP%]{background:white;border:1px solid #4ea9ff;box-shadow:0 2px 20px 2px #4ea9ff}.drawflow[_ngcontent-%COMP%]   .drawflow-node.selected[_ngcontent-%COMP%]   .title-box[_ngcontent-%COMP%]{color:#22598c}.drawflow[_ngcontent-%COMP%]   .connection[_ngcontent-%COMP%]   .main-path[_ngcontent-%COMP%]{stroke:#4ea9ff;stroke-width:3px}.drawflow[_ngcontent-%COMP%]   .drawflow-node[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%], .drawflow[_ngcontent-%COMP%]   .drawflow-node[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{height:15px;width:15px;border:2px solid var(--border-color)}.drawflow[_ngcontent-%COMP%]   .drawflow-node[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]:hover, .drawflow[_ngcontent-%COMP%]   .drawflow-node[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]:hover{background:#4ea9ff}.drawflow[_ngcontent-%COMP%]   .drawflow-node[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{right:10px}.drawflow[_ngcontent-%COMP%]   .drawflow-node[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]{left:-10px;background:white}.drawflow[_ngcontent-%COMP%] > .drawflow-delete[_ngcontent-%COMP%]{border:2px solid #43b993;background:white;color:#43b993;box-shadow:0 2px 20px 2px #43b993}.drawflow-delete[_ngcontent-%COMP%]{border:2px solid #4ea9ff;background:white;color:#4ea9ff;box-shadow:0 2px 20px 2px #4ea9ff}.drawflow-node[_ngcontent-%COMP%]   .title-box[_ngcontent-%COMP%]{height:50px;line-height:50px;background:var(--background-box-title);border-bottom:1px solid #e9e9e9;border-radius:4px 4px 0 0;padding-left:10px}.drawflow[_ngcontent-%COMP%]   .title-box[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{position:initial}.drawflow-node[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]{padding:10px 20px 20px;font-size:14px;color:#555}.drawflow-node[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-top:5px;margin-bottom:5px}.drawflow-node.welcome[_ngcontent-%COMP%]{width:250px}.drawflow-node.slack[_ngcontent-%COMP%]   .title-box[_ngcontent-%COMP%]{border-radius:4px}.drawflow-node[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .drawflow-node[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .drawflow-node[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{border-radius:4px;border:1px solid var(--border-color);height:30px;line-height:30px;font-size:16px;width:158px;color:#555}.drawflow-node[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{height:100px}.drawflow-node.personalized[_ngcontent-%COMP%]{background:red;height:200px;text-align:center;color:#fff}.drawflow-node.personalized[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]{background:yellow}.drawflow-node.personalized[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{background:green}.drawflow-node.personalized.selected[_ngcontent-%COMP%]{background:blue}.drawflow[_ngcontent-%COMP%]   .connection[_ngcontent-%COMP%]   .point[_ngcontent-%COMP%]{stroke:var(--border-color);stroke-width:2;fill:#fff;transform:translate(-9999px,-9999px)}.drawflow[_ngcontent-%COMP%]   .connection[_ngcontent-%COMP%]   .point.selected[_ngcontent-%COMP%], .drawflow[_ngcontent-%COMP%]   .connection[_ngcontent-%COMP%]   .point[_ngcontent-%COMP%]:hover{fill:#4ea9ff}.modal[_ngcontent-%COMP%]{display:none;position:fixed;z-index:7;left:0;top:0;width:100vw;height:100vh;overflow:auto;background-color:#000;background-color:#000000b3}.modal-content[_ngcontent-%COMP%]{position:relative;background-color:#fefefe;margin:15% auto;padding:20px;border:1px solid #888;width:400px}.modal[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{color:#aaa;float:right;font-size:28px;font-weight:700;cursor:pointer}@media only screen and (max-width: 768px){.modal-content[_ngcontent-%COMP%]{width:80%}}body[_ngcontent-%COMP%]{overflow:auto}.container[_ngcontent-%COMP%]{display:flex;padding:10px}.sidebar[_ngcontent-%COMP%]{width:300px;padding:20px 50px 20px 20px;background-color:#f4f4f4;border-right:1px solid #ccc}#draggable-list[_ngcontent-%COMP%]{list-style-type:none;padding:0}.draggable-item[_ngcontent-%COMP%]{width:300px;display:flex;align-items:center;padding:10px;margin:5px 0;background-color:#ddd;cursor:grab}.draggable-item[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{flex-grow:1;margin-right:10px}.draggable-item[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-left:5px}.draggable-item[_ngcontent-%COMP%]:active{cursor:grabbing}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}